fragsize = 32
#nchannels_in = 2
#fragsize = 64
#srate = 44100

# MHA library name
mhalib = transducers

# IO plugin library name
iolib = MHAIOFile

mha.plugin_name = mhachain

mha.mhachain.algos = [prediction_error:nlms save_wave:vU ac2wave:restore_E analysispath ...
    route:out ...  
    acmon:afc_mon]

# Restore the error signal for the LPC computation
mha.mhachain.restore_E.name = vE #recall the vE signal from AC space
mha.mhachain.restore_E.gain_in = 0 #gain of the intermediate x signal
mha.mhachain.restore_E.gain_ac = +1 #gain of the vE signal (from AC space)

# analysispath
mha.mhachain.analysispath.plugname = lpc
mha.mhachain.analysispath.fragsize = 160
mha.mhachain.analysispath.acvars = lpc

# LPC path
mha.mhachain.analysispath.plug.lpc_order = 20
mha.mhachain.analysispath.plug.shift = yes
mha.mhachain.analysispath.plug.comp_each_iter = 1
mha.mhachain.analysispath.plug.norm = yes
mha.mhachain.analysispath.plug.lpc_buffer_size = 160


# configure NLMS
mha.mhachain.nlms.rho = 0.0005 # convergence coefficient
mha.mhachain.nlms.c = 1e-6 # stabilization parameter
mha.mhachain.nlms.ntaps = 47 # number of taps in filter
mha.mhachain.nlms.name_lpc = lpc # Name of the lpc coefficients variable
mha.mhachain.nlms.lpc_order = 20
mha.mhachain.nlms.name_e = vE # Name of error signal E, here estimated using LPC
mha.mhachain.nlms.delay_w = [750 750]
mha.mhachain.nlms.delay_d = [161 161]
mha.mhachain.nlms.pred_err_delay = [96 96]
mha.mhachain.nlms.n_no_update = 256
mha.mhachain.nlms.name_f = vWfull
mha.mhachain.nlms.gains = [5 5]

mha.mhachain.out.out = [vU:0 vU:1] #recall stored vU and pass to output
mha.mhachain.out.ac = [vU:0 vU:1] #save the output of the current iteration for LPC to be performed in the next iteration

mha.mhachain.afc_mon.dispmode = matrix #correct dimensions in MATLAB

