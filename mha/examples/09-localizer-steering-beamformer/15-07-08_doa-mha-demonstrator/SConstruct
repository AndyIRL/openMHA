import os.path

Help(
"""This build system compiles the MHA plug-ins.  To compile, use one of
the following build targets:

    install -> install the plug-ins into $DESTDIR

By default (no target given) SCons will build all four plug-ins.
"""
)

var = Variables(['variables.cache'])
var.AddVariables(
    ('CC', 'The C compiler'),
    ('CCFLAGS', 'Extra C/C++ compiler flags'),
    ('CXX', 'The C++ compiler'),
    BoolVariable('debug', 'Compile with debugging information when true.',
                 False),
    PathVariable('MHA_PATH', 'The path to the MHA installation', '.',
                 PathVariable.PathIsDir),
    PathVariable('DESTDIR', 'The install destination', os.curdir,
                 PathVariable.PathIsDirCreate),
)
env = Environment(variables=var)
var.Save('variables.cache', env)

# allow overriding CC via the OS environment
env['CC'] = os.getenv('CC', env['CC'])
env['CXX'] = os.getenv('CXX', env['CXX'])

mha_include_path = os.path.join(env['MHA_PATH'], 'devel', 'include')

env.Prepend(
    CCFLAGS=Split('-pedantic -Wall -Wextra -O3 -march=k8 -mtune=native'),
    CFLAGS=Split('-std=c99'),
    CXXFLAGS=Split('-std=c++98'),
    CPPPATH=[mha_include_path],
    LIBS=['m']
)

if env['debug']:
    env.Append(CCFLAGS=['-g'])

# use clang's color output
if env['CC'] == 'clang':
    env.Append(CFLAGS=['-fcolor-diagnostics'])
if env['CXX'] == 'clang++':
    env.Append(CXXFLAGS=['-fcolor-diagnostics'])

plugins = env.SConscript(
    dirs='src',
    variant_dir='build-' + ('debug' if env['debug'] else 'release'),
    exports='env',
    duplicate=False
)

plugins_inst = env.Install('$DESTDIR', plugins)

# define aliases and set the default
Alias('install', plugins_inst)
Default(plugins)

Help(
"""
The following environment variables can be overridden by passing them *after*
the call to scons, e.g., "scons CC=gcc". They are cached in the file
"variables.cache"; delete it if you want to reset all settings to their
defaults.

NOTE: in order to support the Clang static analyser, CC and CXX can be
overridden by the OS environment.  Be aware, however, that they are *not*
stored in the variable cache when set this way, so scons reverts back to the
cached value as soon as it is unset.
"""
+ var.GenerateHelpText(env)
)
